//
// Migration API Tests
//
// This file contains HTTP requests for testing the migration endpoints.
// To use this file, you need the REST Client extension for VS Code.
// 
// @see https://marketplace.visualstudio.com/items?itemName=humao.rest-client
//

// Set the base URL for your API
@baseUrl = http://127.0.0.1:5001/biz-tracker-a5562/us-central1/api
@contentType = application/json

###
// @name getStatus
// Check API status
GET {{baseUrl}}/health HTTP/1.1

###
// @name getPurchases
// Get all purchases to verify migration progress
GET {{baseUrl}}/purchases HTTP/1.1
Content-Type: {{contentType}}

@purchaseId = 67edfdb8e62bc8529544bf55

###
// @name getPurchase
// Get a specific purchase to examine its structure
GET {{baseUrl}}/purchases/{{purchaseId}} HTTP/1.1
Content-Type: {{contentType}}

###
// @name getItems
// Get all items to verify migration progress
GET {{baseUrl}}/items HTTP/1.1
Content-Type: {{contentType}}

@itemId = 67edfd91e62bc8529544bf52

###
// @name getItem
// Get a specific item to examine its structure
GET {{baseUrl}}/items/{{itemId}} HTTP/1.1
Content-Type: {{contentType}}

###
// @name getRelationships
// Get all relationships to verify migration progress
GET {{baseUrl}}/relationships?limit=100 HTTP/1.1
Content-Type: {{contentType}}

###
// @name getItemPrimaryRelationships
// Get primary relationships for a specific item (replace with actual item ID)
GET {{baseUrl}}/relationships/primary/{{itemId}}/Item HTTP/1.1
Content-Type: {{contentType}}

###
// @name getItemSecondaryRelationships
// Get secondary relationships for a specific item (replace with actual item ID)
GET {{baseUrl}}/relationships/secondary/{{itemId}}/Item HTTP/1.1
Content-Type: {{contentType}}

###
// @name migrateSingleItem
// Migrate a single item (replace with actual item ID)
GET {{baseUrl}}/migrations/items/{{itemId}} HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Item migrated successfully",
//   "data": { ... } // Updated item with normalized measurement structure
// }


###
// @name migrateAllItems
// Migrate all items to normalized structure
GET {{baseUrl}}/migrations/items HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success", 
//   "message": "Migrated N items successfully, M failed",
//   "data": {
//     "total": N+M,
//     "successful": N,
//     "failed": M,
//     "errors": [] // Contains error details if any failures occurred
//   }
// }


###
// @name migrateAllRelationships
// Migrate all relationships to normalized structure
GET {{baseUrl}}/migrations/relationships HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Migrated N relationships successfully, M failed",
//   "data": {
//     "total": N+M,
//     "successful": N,
//     "failed": M,
//     "byType": {
//       "purchase_item": { "total": X, "successful": Y, "failed": Z },
//       "sale_item": { ... },
//       "product_material": { ... },
//       // etc.
//     },
//     "errors": [] // Contains error details if any failures occurred
//   }
// }

###
// @name migrateSingleRelationship
// Migrate a single relationship (replace with actual relationship ID)
GET {{baseUrl}}/migrations/relationships/65a2b4c7d890e1002f123456 HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Relationship migrated successfully",
//   "data": { ... } // Updated relationship with normalized measurement structure
// }

###
// @name migrateAllEmbeddedRelationships
// Migrate all embedded relationships to standalone relationships
GET {{baseUrl}}/migrations/embedded HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Created N relationships, M errors",
//   "data": {
//     "items": {
//       "total": X,
//       "processed": Y,
//       "relationshipsCreated": Z,
//       "errors": []
//     },
//     "purchases": { ... },
//     "sales": { ... },
//     "totalRelationshipsCreated": N,
//     "totalErrors": M
//   }
// }

###
// @name migrateItemEmbeddedRelationships
// Migrate embedded relationships for a single item (replace with actual item ID)
GET {{baseUrl}}/migrations/embedded/items/67edfd91e62bc8529544bf52 HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Created N relationships, M failed",
//   "data": {
//     "created": N, // Number of relationships created from item's embedded data
//     "errors": []  // List of errors if any operations failed
//   }
// }
// Note: A response with "created": 0 means either:
// 1. The item has no embedded relationships to migrate, or
// 2. The item's embedded relationships have already been migrated

###
// @name migratePurchaseEmbeddedRelationships
// Migrate embedded relationships for a single purchase (replace with actual purchase ID)
GET {{baseUrl}}/migrations/embedded/purchases/67edfdb8e62bc8529544bf55 HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Created N relationships, M failed",
//   "data": {
//     "created": N, // Number of relationships created from purchase's embedded items
//     "errors": []  // List of errors if any operations failed
//   }
// }

###
// @name migrateSaleEmbeddedRelationships
// Migrate embedded relationships for a single sale (replace with actual sale ID)
GET {{baseUrl}}/migrations/embedded/sales/64f5a7a59b272e001f123456 HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Created N relationships, M failed",
//   "data": {
//     "created": N, // Number of relationships created from sale's embedded items
//     "errors": []  // List of errors if any operations failed
//   }
// }

###
// @name migrateAll
// Run complete migration (all steps)
// This performs item normalization, relationship normalization, and embedded relationship conversion
GET {{baseUrl}}/migrations/all HTTP/1.1
Content-Type: {{contentType}}

// Expected response includes summary of all migration operations
// {
//   "status": "success",
//   "message": "Complete migration finished",
//   "data": {
//     "items": { "successful": N, "failed": M, ... },
//     "relationships": { "successful": N, "failed": M, ... },
//     "embeddedRelationships": { "totalRelationshipsCreated": N, "totalErrors": M, ... },
//     "summary": { ... }
//   }
// }

###
// @name executePurchaseItemMigration
// Directly migrate a specific purchase's items to relationships with custom batch settings
// Useful for working around problematic migrations
GET {{baseUrl}}/migrations/embedded/purchases/67edfdb8e62bc8529544bf55 HTTP/1.1
Content-Type: {{contentType}}

###
// CLEANUP ENDPOINTS - removes embedded fields after successful migration

###
// @name cleanupSingleItem
// Remove embedded fields from a single item (replace with actual item ID)
GET {{baseUrl}}/migrations/cleanup HTTP/1.1
Content-Type: {{contentType}}

// Expected response:
// {
//   "status": "success",
//   "message": "Removed embedded fields from item 67edfd91e62bc8529544bf52",
//   "data": {
//     "itemId": "67edfd91e62bc8529544bf52",
//     "fieldsRemoved": ["components", "derivedItems"],